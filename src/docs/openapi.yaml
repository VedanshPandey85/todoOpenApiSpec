openapi: 3.0.0
info:
  title: Todo API
  version: 1.0.0
  description: A simple Todo API with OpenAPI documentation.

servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /todos:
    get:
      summary: Get all todos
      description: Retrieve a list of all todos from the database.
      responses:
        '200':
          description: A list of todos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /todo:
    post:
      summary: Create a new todo
      description: Add a new todo to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoInput'
      responses:
        '201':
          description: The created todo.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /todos/{id}:
    put:
      summary: Update a todo
      description: Update the completion status of a todo by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the todo to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                completed:
                  type: boolean
                  description: The new completion status of the todo.
      responses:
        '200':
          description: The updated todo.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete a todo
      description: Delete a todo by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the todo to delete.
      responses:
        '200':
          description: Todo deleted successfully.
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
          description: The auto-generated ID of the todo.
        title:
          type: string
          description: The title of the todo.
        completed:
          type: boolean
          description: The completion status of the todo.
      example:
        id: 1
        title: Buy groceries
        completed: false

    TodoInput:
      type: object
      properties:
        title:
          type: string
          description: The title of the todo.
      required:
        - title
      example:
        title: Buy groceries

  responses:
    BadRequest:
      description: Bad request. Invalid input data.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Invalid input data.

    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Resource not found.

    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: An internal server error occurred.