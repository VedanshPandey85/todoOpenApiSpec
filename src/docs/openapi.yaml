openapi: 3.0.0
info:
  title: Todo API
  version: 1.0.0
  description: API for managing todos.
servers:
  - url: http://localhost:3000/api
paths:
  /todos:
    get:
      summary: Get all todos
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: true
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of todos per page
          required: true
          schema:
            type: integer
            example: 10
        - name: tags
          in: query
          description: Filter todos by tags
          required: false
          schema:
            type: string
            example: "work"
      responses:
        '200':
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '500':
          description: Internal server error
    post:
      summary: Create a new todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodo'
      responses:
        '201':
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Invalid todo data
        '500':
          description: Internal server error

  /todos/{id}:
    patch:
      summary: Update an existing todo
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the todo to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodo'
      responses:
        '200':
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Invalid input
        '404':
          description: Todo not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a todo
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the todo to delete
          schema:
            type: integer
      responses:
        '200':
          description: Todo deleted successfully
        '404':
          description: Todo not found
        '500':
          description: Internal server error

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        completed:
          type: boolean
        tags:
          type: array
          items:
            type: string
    CreateTodo:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        completed:
          type: boolean
        tags:
          type: array
          items:
            type: string
    UpdateTodo:
      type: object
      properties:
        title:
          type: string
        completed:
          type: boolean
        tags:
          type: array
          items:
            type: string
